version: '3'
services:
  frontend:
    # image: frontend
    container_name: frontend-app
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    networks:
      - search-app-network
    ports:
      - 3000:3000

  backend:
    # image: backend
    container_name: backend-app
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    networks:
      - search-app-network
    ports:
      - 8088:8088
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - search-app-network
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  search-app-network:
    driver: bridge
